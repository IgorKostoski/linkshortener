name: Go CI and Docker Build

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*' # Also run on version tags like v1.0.0
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if you prefer, or your GHCR path
  # For GHCR, it's ghcr.io/YOUR_GITHUB_USERNAME/YOUR_REPOSITORY_NAME
  # Example: ghcr.io/johndoe/linkshortener
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Or your desired Go version

      - name: Run Go Mod Tidy
        run: go mod tidy # Ensure go.sum is up to date

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test -v ./...

  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test-and-lint # This job depends on the test-and-lint job succeeding
    # Only run this job on pushes to main or on new tags, not on PRs to avoid publishing dev images from PRs
    if: github.event_name == 'push'

    permissions:
      contents: read # Needed to checkout the repository
      packages: write # Needed to push Docker images to GHCR

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.IgorKostoski }} # Your GitHub username
          password: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically provides this token

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Give this step an ID so we can refer to its outputs
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: | # Define how images should be tagged
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}} # For git tags like v1.0.0 -> image:v1.0.0
            type=sha,prefix= # For commit SHA -> image:a1b2c3d (short SHA)
            type=raw,value=latest,enable={{is_default_branch}} # Tag 'latest' for the default branch (main)

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by the metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Use labels generated by the metadata-action
          cache-from: type=gha # Enable build cache from GitHub Actions
          cache-to: type=gha,mode=max # Cache to GitHub Actions, mode=max for wider caching